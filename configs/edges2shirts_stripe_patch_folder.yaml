# Copyright (C) 2017 NVIDIA Corporation.  All rights reserved.
# Licensed under the CC BY-NC-SA 4.0 license (https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode).

# logger options
image_save_iter: 500         # How often do you want to save output images during training
image_display_iter: 5        # How often do you want to display output images during training
display_size: 8               # How many images do you want to display each time
snapshot_save_iter: 5000      # How often do you want to save trained models
log_iter: 1                   # How often do you want to log the training stats
gpu_id: '0'
visdom_port: 8098

# optimization options
max_iter: 1000000             # maximum number of training iterations
batch_size: 1                 # batch size
weight_decay: 0.0001          # weight decay
beta1: 0.5                    # Adam parameter
beta2: 0.999                  # Adam parameter
init: kaiming                 # initialization [gaussian/kaiming/xavier/orthogonal]
lr: 0.0001                    # initial learning rate #0.0001
lr_policy: step               # learning rate scheduler
step_size: 100000             # how often to decay learning rate
gamma: 0.5                    # how much to decay learning rate
gan_w: 2                     # weight of adversarial loss
recon_x_w: 1                 # weight of image reconstruction loss
recon_s_w: 0                  # weight of style reconstruction loss
recon_x_s_w: 0                # weight of image reconstruction style
recon_c_w: 0                  # weight of content reconstruction loss
recon_x_cyc_w: 0              # weight of explicit style augmented cycle consistency loss
vgg_w: 0                      # weight of domain-invariant perceptual loss
content_w: 1                 # weight of content loss
style_w: 0                    # weight of style loss
kl_w: 0.1                    # weight of style loss

# model options
gen:
  dim: 64                     # number of filters in the bottommost layer
  mlp_dim: 256                # number of filters in MLP
  style_dim: 8                # length of style code
  activ: relu                 # activation function [relu/lrelu/prelu/selu/tanh]
  n_downsample: 2             # number of downsampling layers in content encoder
  n_res: 4                    # number of residual blocks in content encoder/decoder
  pad_type: reflect           # padding type [zero/reflect]
dis:
  dim: 64                     # number of filters in the bottommost layer
  norm: none                  # normalization layer [none/bn/in/ln]
  activ: lrelu                # activation function [relu/lrelu/prelu/selu/tanh]
  n_layer: 4                  # number of layers in D
  gan_type: lsgan             # GAN loss [lsgan/nsgan]
  num_scales: 3               # number of scales
  pad_type: reflect           # padding type [zero/reflect]

# data options
input_dim_a: 3                              # number of image channels [1/3]
input_dim_b: 3                              # number of image channels [1/3]
num_workers: 8                              # number of data loading threads
new_size_a: 256                             # first resize the shortest image side to this size
new_size_b: 256
crop_image_height: 256                      # random crop image of this height
crop_image_width: 512                       # random crop image of this width
data_root: ./datasets/edges2shirts_stripe_patch/     # dataset folder location
patch_size: 64
alignned_num: 1
whether_mask: 1

#vgg select layers
content_layers: ['0', '2', '5', '7', '10', '12', '14', '16', '19', '21', '23', '25', '28', '30', '32', '34']
style_layers: ['19', '21', '23', '25']